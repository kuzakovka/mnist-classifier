MNIST NEURAL NETWORK CLASSIFIER

Простая нейронная сеть на C для классификации рукописных цифр из датасета MNIST.

ОПИСАНИЕ
Проект реализует многослойный перцептрон для классификации цифр (0-9). Поддерживает обучение и тестирование на датасете MNIST, настройку архитектуры через конфигурационный файл.

ТРЕБОВАНИЯ
- Компилятор GCC
- Стандартные библиотеки C (stdio.h, stdlib.h, math.h)
- ОС: Linux/Windows/MacOS

УСТАНОВКА
1. Склонируйте репозиторий: git clone <URL> (если проект на GitHub)
2. Перейдите в директорию проекта: cd mnist-classifier
3. Скомпилируйте: gcc main.c mnist.c -o mnist_classifier -lm (предполагая, что реализация функций в mnist.c)

ИСПОЛЬЗОВАНИЕ
1. Поместите файлы mnist_train.csv, mnist_test.csv и config.txt в директорию с исполняемым файлом.
2. Запустите: ./mnist_classifier
3. Результаты:
   - Лог обучения (точность, потери) в консоли
   - Сохраненные веса в weights.bin
   - Метрики в output.txt
   - Активации в heatmap.txt

ФОРМАТ CONFIG.TXT
Файл должен содержать:
- Первую строку: размеры слоев, разделенные пробелами (например, 784 256 10)
- Вторую строку: скорость обучения (например, 0.01)
- Третью строку: коэффициент регуляризации (например, 0.001)

Пример:
784 256 10
0.01
0.001

ПРИМЕР ВЫВОДА
Loaded 60000 records from mnist_train.csv
Training network with configuration:
Layers: 784 256 10
Learning rate: 0.0100, Regularization: 0.0010
Starting training for 45 epochs...
Epoch 0: Average loss = 0.XXXX
...
Test Accuracy: 92.50% (9250/10000)
Metrics saved to output.txt

СТРУКТУРА ПРОЕКТА
- main.c: Основная программа для обучения и тестирования.
- mnist.h: Заголовочный файл с определениями структур и функций.
- mnist.c: Реализация функций для работы с данными и сетью (предполагается).
- config.txt: Конфигурация сети.
- mnist_train.csv, mnist_test.csv: Данные для обучения и тестирования.
- weights.bin, output.txt, heatmap.txt: Выходные файлы.

ТЕСТИРОВАНИЕ
Программа автоматически тестирует модель на mnist_test.csv после обучения и выводит точность. Первые три тестовых примера выводятся с вероятностями для наглядности.

ОГРАНИЧЕНИЯ
- Фиксированный размер входных данных (784 пикселя).
- Отсутствие поддержки загрузки сохраненных весов.
- Возможные проблемы с большими датасетами из-за ограничений памяти.

БУДУЩИЕ УЛУЧШЕНИЯ
- Добавление поддержки других функций активации.
- Реализация загрузки сохраненных весов.
- Оптимизация производительности.